{"ast":null,"code":"import _slicedToArray from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Delivering.js\";\nimport React, { useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport { useStateValue } from './../../../global/state';\nconst useStyles = makeStyles(theme => ({\n  clicked: {\n    disabled: true\n  },\n  button: {\n    margin: theme.spacing(0.5),\n    whiteSpace: 'nowrap'\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#e3c768',\n    color: 'white'\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Delivery = props => {\n  const classes = useStyles();\n  const columnMetaData = [{\n    title: 'Id',\n    field: 'databaseId',\n    hidden: true\n  }, {\n    title: 'Status',\n    field: 'status',\n    cellStyle: {\n      textAlign: 'center',\n      padding: '1px 1px 1px 1px'\n    },\n    render: props => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      label: \"Ready To Pickup\",\n      className: classes.chip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))\n  }, {\n    title: 'Order ID',\n    field: 'orderName'\n  }, {\n    title: 'Order Time',\n    field: 'orderTime',\n    type: 'datetime',\n    cellStyle: {\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Remark',\n    field: 'future',\n    cellStyle: {\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Gross Total',\n    field: 'grossTotal',\n    type: 'currency',\n    currencySetting: {\n      currencyCode: 'THB'\n    }\n  }]; //Global state\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        _useStateValue2$ = _useStateValue2[0],\n        appState = _useStateValue2$.appState,\n        dataState = _useStateValue2$.dataState,\n        dispatch = _useStateValue2[1]; //Local state\n\n\n  const _React$useState = React.useState({\n    columns: columnMetaData,\n    data: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isLoading = _React$useState4[0],\n        setIsLoading = _React$useState4[1]; //Data isloading when button has beenclicked\n  //On click button action\n\n\n  async function deliveringHandle(id, orderId, rowData) {\n    let put_url = '/api/v1/store/order/1112delivery/' + id + '/pickedup';\n    console.group('PUT ' + put_url);\n    await axios.put(put_url, {\n      orderName: orderId\n    }).then(response => {\n      var results = response.data;\n      console.group('API return :');\n      console.log(results);\n      console.groupEnd();\n      /*\n      //Removing rowId\n      var copyState = [...state.data];\n      var removed = copyState.filter(order =>{\n          return order.databaseId !== id;\n      })\n      console.group('RowID['+id+' was removed');\n      console.groupEnd();\n       setState({\n          columns: columnMetaData,\n          data: removed\n      });\n      setIsLoading(false);\n       console.group('Rendering meterial-table');\n      console.log(removed);\n      console.groupEnd();\n      */\n    }).catch(error => {\n      console.group('API Error :');\n      console.log(error);\n      console.groupEnd();\n    });\n    console.groupEnd();\n  }\n\n  return React.createElement(MaterialTable, {\n    title: \"Cooking\",\n    isLoading: isLoading,\n    columns: state.columns,\n    data: dataState.delivering,\n    actions: [\n    /*\n    rowData => ({\n         icon: () => {\n             return (\n                 <div>\n                     <Button\n                         variant=\"contained\"\n                         color=\"primary\"\n                         className={classes.button}\n                     >\n                         Delivering\n                     </Button>\n                 </div>\n             );\n         },\n         tooltip: 'Delivering',\n         onClick: (event,rowData) => {\n             setIsLoading(true);\n             deliveringHandle(rowData.databaseId,rowData.orderName);\n         }\n    })\n    */\n    {\n      icon: 'save',\n      tooltip: 'Delivering',\n      onClick: (event, rowData) => {\n        setIsLoading(true);\n        deliveringHandle(rowData.databaseId, rowData.orderName, rowData);\n      }\n    }],\n    actionsColumnIndex: \"1\",\n    filtering: \"true\",\n    options: {\n      padding: 'dense',\n      pageSize: 10,\n      search: false,\n      showTitle: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  });\n};\n\nexport default Delivery;","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Delivering.js"],"names":["React","useEffect","Button","Chip","makeStyles","MaterialTable","axios","useStateValue","useStyles","theme","clicked","disabled","button","margin","spacing","whiteSpace","chip","backgroundColor","color","close","padding","Delivery","props","classes","columnMetaData","title","field","hidden","cellStyle","textAlign","render","type","currencySetting","currencyCode","appState","dataState","dispatch","useState","columns","data","state","setState","isLoading","setIsLoading","deliveringHandle","id","orderId","rowData","put_url","console","group","put","orderName","then","response","results","log","groupEnd","catch","error","delivering","icon","tooltip","onClick","event","databaseId","pageSize","search","showTitle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Button } from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport {useStateValue} from './../../../global/state'\n\n\nconst useStyles = makeStyles(theme => ({\n    clicked: {\n        disabled: true,\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        whiteSpace: 'nowrap'\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#e3c768',\n        color: 'white'\n    },\n    close: {\n        padding: theme.spacing(0.5),\n    },\n}));\n\nconst Delivery = (props) => {\n    const classes = useStyles();\n    const columnMetaData = [\n        {\n            title: 'Id',\n            field: 'databaseId',\n            hidden: true\n        },\n        {\n            title: 'Status',\n            field: 'status',\n            cellStyle: {\n                textAlign: 'center',\n                padding: '1px 1px 1px 1px',\n            },\n            render: props => (\n                <div>\n                    <Chip label=\"Ready To Pickup\" className={classes.chip}  />\n                </div>\n            ),\n        },\n        {\n            title: 'Order ID',\n            field: 'orderName',\n        },\n        { title: 'Order Time' ,\n            field: 'orderTime',\n            type: 'datetime',\n            cellStyle: {\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        { title: 'Remark',\n            field: 'future',\n            cellStyle: {\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        { title: 'Gross Total',\n            field: 'grossTotal',\n            type: 'currency' ,\n            currencySetting: {\n                currencyCode: 'THB'\n            }\n        },\n    ];\n\n    //Global state\n    const [{ appState ,dataState }, dispatch] = useStateValue();\n    //Local state\n    const [state, setState] = React.useState({\n        columns: columnMetaData,\n        data: []\n    });\n    const [isLoading,setIsLoading] = React.useState(false);  //Data isloading when button has beenclicked\n\n    //On click button action\n    async function deliveringHandle(id ,orderId ,rowData) {\n        let put_url = '/api/v1/store/order/1112delivery/'+id+'/pickedup';\n        console.group('PUT '+put_url);\n        await axios.put(put_url,{\n            orderName: orderId\n        }).then((response) => {\n            var results = response.data;\n            console.group('API return :');\n            console.log(results);\n            console.groupEnd();\n\n            /*\n            //Removing rowId\n            var copyState = [...state.data];\n            var removed = copyState.filter(order =>{\n                return order.databaseId !== id;\n            })\n            console.group('RowID['+id+' was removed');\n            console.groupEnd();\n\n            setState({\n                columns: columnMetaData,\n                data: removed\n            });\n            setIsLoading(false);\n\n            console.group('Rendering meterial-table');\n            console.log(removed);\n            console.groupEnd();\n            */\n        }).catch((error)=>{\n            console.group('API Error :');\n            console.log(error);\n            console.groupEnd();\n        })\n        console.groupEnd();\n    }\n\n    return (\n            <MaterialTable\n                title=\"Cooking\"\n                isLoading={isLoading}\n                columns={state.columns}\n                data={dataState.delivering}\n                actions={[\n                    /*\n                    rowData => ({\n                         icon: () => {\n                             return (\n                                 <div>\n                                     <Button\n                                         variant=\"contained\"\n                                         color=\"primary\"\n                                         className={classes.button}\n                                     >\n                                         Delivering\n                                     </Button>\n                                 </div>\n                             );\n                         },\n                         tooltip: 'Delivering',\n                         onClick: (event,rowData) => {\n                             setIsLoading(true);\n                             deliveringHandle(rowData.databaseId,rowData.orderName);\n                         }\n                    })\n                    */\n                    {\n                        icon: 'save',\n                        tooltip: 'Delivering',\n                        onClick: (event, rowData) => {\n                            setIsLoading(true);\n                            deliveringHandle(rowData.databaseId,rowData.orderName,rowData);\n                        }\n                    }\n                ]}\n                actionsColumnIndex=\"1\"\n                filtering='true'\n                options={{\n                    padding: 'dense',\n                    pageSize: 10,\n                    search: false,\n                    showTitle: false,\n\n                }}\n\n            />\n    );\n};\n\nexport default Delivery;"]},"metadata":{},"sourceType":"module"}