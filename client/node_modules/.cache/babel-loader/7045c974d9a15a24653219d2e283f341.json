{"ast":null,"code":"import _slicedToArray from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Cooking.js\";\nimport React, { useEffect } from 'react';\nimport { AddBox, ArrowUpward } from \"@material-ui/icons\";\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport { useStateValue } from './../../../global/state';\nconst useStyles = makeStyles(theme => ({\n  clicked: {\n    disabled: true\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst Cooking = props => {\n  const classes = useStyles();\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        _useStateValue2$ = _useStateValue2[0],\n        appState = _useStateValue2$.appState,\n        dataState = _useStateValue2$.dataState,\n        dispatch = _useStateValue2[1];\n\n  function freshOrdersInStore() {\n    axios.get('/api/v1/1112delivery/orders/instore/SZ').then(response => {\n      if (response.data) {\n        var results = response.data;\n        console.group('API_order_instore');\n        console.log('API return :');\n        console.log(results);\n\n        if (results.length > 0) {\n          dispatch({\n            type: 'FRESH_ORDER_INSTORE_SUCCESS',\n            data: results\n          });\n        }\n\n        console.groupEnd();\n        console.group('DataState');\n        console.log(appState);\n        console.log(dataState);\n        console.groupEnd();\n      }\n    }).catch(error => {\n      console.log('API error ,could not sign in');\n    });\n  } //Hook use Local state\n\n\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'Action',\n      field: 'action',\n      render: props => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: e => console.log('cooking button clicked') //props.onChange(e.target.value)\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"\\u0E2D\\u0E32\\u0E2B\\u0E32\\u0E23\\u0E40\\u0E2A\\u0E23\\u0E47\\u0E08\\u0E41\\u0E25\\u0E49\\u0E27\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.button,\n        onClick: e => console.log('cooking button clicked') //props.onChange(e.target.value)\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\\u0E04\\u0E19\\u0E2A\\u0E48\\u0E07\\u0E21\\u0E32\\u0E16\\u0E36\\u0E07\\u0E41\\u0E25\\u0E49\\u0E27\"))\n    }, {\n      title: 'TPC Reference ID',\n      field: 'refID' //,\n      //lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\n    }, {\n      title: 'Order Time',\n      field: 'orderTime',\n      type: 'datetime'\n    }, {\n      title: 'Store',\n      field: 'storeName'\n    }, {\n      title: 'Order Name',\n      field: 'orderName'\n    }, {\n      title: 'Gross Total',\n      field: 'grossTotal',\n      type: 'currency'\n    }],\n    data: [{\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12345',\n      grossTotal: \"323.25\",\n      refID: \"12345\"\n    }, {\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12346',\n      grossTotal: \"500.00\",\n      refID: \"12346\"\n    }, {\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12347',\n      grossTotal: \"33.5\",\n      refID: \"12347\"\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1]; //First time loading\n\n\n  useEffect(() => {\n    //Get order in store,\n    //Set to state\n    freshOrdersInStore();\n  }, []);\n  /*\n  useEffect(() => {\n      function handleStatusChange(status) {\n        setIsOnline(status.isOnline);\n      }\n       //[componentWillMount ,componentDidMount ,componentDidUpdate]\n      ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n       //[componentWillUnmount()]\n      // Specify how to clean up after this effect:\n      return function cleanup() {\n        ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n      };\n    });\n    */\n\n  return React.createElement(MaterialTable, {\n    title: \"\\u0E2D\\u0E2D\\u0E40\\u0E14\\u0E2D\\u0E23\\u0E4C\\u0E43\\u0E2B\\u0E21\\u0E48\",\n    columns: state.columns,\n    data: state.data,\n    actionsColumnIndex: \"1\",\n    filtering: \"true\",\n    options: {\n      padding: '0px',\n      pageSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  });\n};\n\nexport default Cooking;","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Cooking.js"],"names":["React","useEffect","AddBox","ArrowUpward","Button","makeStyles","MaterialTable","axios","useStateValue","useStyles","theme","clicked","disabled","button","margin","spacing","Cooking","props","classes","appState","dataState","dispatch","freshOrdersInStore","get","then","response","data","results","console","group","log","length","type","groupEnd","catch","error","useState","columns","title","field","render","e","orderTime","storeName","orderName","grossTotal","refID","state","setState","padding","pageSize"],"mappings":"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","sourcesContent":["import React ,{useEffect} from 'react';\n\nimport { AddBox, ArrowUpward } from \"@material-ui/icons\";\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport {useStateValue} from './../../../global/state'\n\nconst useStyles = makeStyles(theme => ({\n    clicked: {\n        disabled: true,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst Cooking = (props) => {\n    const classes = useStyles();\n    const [{ appState ,dataState }, dispatch] = useStateValue();\n\n    function freshOrdersInStore() {\n        axios.get('/api/v1/1112delivery/orders/instore/SZ')\n        .then((response)=>{\n            if(response.data){\n                var results = response.data;\n                console.group('API_order_instore');\n                console.log('API return :');\n                console.log(results);\n                if (results.length > 0) {\n                    dispatch({\n                        type: 'FRESH_ORDER_INSTORE_SUCCESS',\n                        data: results\n                    });\n                }\n                console.groupEnd();\n\n                console.group('DataState');\n                console.log(appState);\n                console.log(dataState);\n                console.groupEnd();\n            }\n        }).catch((error)=>{\n            console.log('API error ,could not sign in')\n        })\n    }\n    \n\n    //Hook use Local state\n    const [state, setState] = React.useState({\n        columns: [\n            {\n                title: 'Action', field: 'action',\n                render: props => (\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={e => console.log('cooking button clicked')} //props.onChange(e.target.value)\n                        >\n                            อาหารเสร็จแล้ว\n                    </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.button}\n                            onClick={e => console.log('cooking button clicked')} //props.onChange(e.target.value)\n                        >\n                            คนส่งมาถึงแล้ว\n                    </Button>\n                    </div>\n                )\n            },\n            {\n                title: 'TPC Reference ID',\n                field: 'refID' //,\n                \n                //lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n            },\n            { title: 'Order Time' ,field: 'orderTime', type: 'datetime'},\n            { title: 'Store', field: 'storeName' },\n            { title: 'Order Name', field: 'orderName' },\n            { title: 'Gross Total', field: 'grossTotal', type: 'currency' },\n        ],\n        data: [\n\n            { orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12345', grossTotal: \"323.25\", refID: \"12345\" },\n            { orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12346', grossTotal: \"500.00\", refID: \"12346\" },\n            { orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12347', grossTotal: \"33.5\", refID: \"12347\" },\n            /*\n            {\n              name: 'Zerya Betül',\n              surname: 'Baran',\n              birthYear: 2017,\n              birthCity: 34,\n            },\n            */\n        ],\n    });\n\n    //First time loading\n    useEffect(() => {\n        //Get order in store,\n        //Set to state\n        freshOrdersInStore();\n\n    },[]);\n\n    /*\n    useEffect(() => {\n        function handleStatusChange(status) {\n          setIsOnline(status.isOnline);\n        }\n\n        //[componentWillMount ,componentDidMount ,componentDidUpdate]\n        ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n\n        //[componentWillUnmount()]\n        // Specify how to clean up after this effect:\n        return function cleanup() {\n          ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n        };\n      });\n      */\n\n    return (\n        <MaterialTable\n            title=\"ออเดอร์ใหม่\"\n            columns={state.columns}\n            data={state.data}\n            actionsColumnIndex=\"1\"\n            filtering='true'\n            options={{\n                padding: '0px',\n                pageSize: 10\n            }}\n        />\n    );\n};\n\nexport default Cooking;"]},"metadata":{},"sourceType":"module"}