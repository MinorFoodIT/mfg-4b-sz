{"ast":null,"code":"import _slicedToArray from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Cancel.js\";\nimport React, { useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport { useStateValue } from './../../../global/state';\nconst useStyles = makeStyles(theme => ({\n  clicked: {\n    disabled: true\n  },\n  button: {\n    margin: theme.spacing(0.5),\n    whiteSpace: 'nowrap'\n  },\n  chip_cooking: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#e31b2f',\n    color: 'white'\n  },\n  chip_ready_pickup: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#e3c768',\n    color: 'white'\n  },\n  chip_delivered: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#1b5e20',\n    color: 'white'\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Cancel = props => {\n  const classes = useStyles();\n  const columnMetaData = [{\n    title: 'Id',\n    field: 'databaseId',\n    hidden: true\n  }, {\n    title: 'Status',\n    field: 'status',\n    cellStyle: {\n      textAlign: 'center',\n      padding: '1px 1px 1px 1px'\n    },\n    render: rowData => {\n      //props => {\n      if (rowData.status === 'Cooking') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: \"Cooking\",\n          className: classes.chip_cooking,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      } else if (rowData.status === 'Ready To Pickup') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: \"Ready To Pickup\",\n          className: classes.chip_ready_pickup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }));\n      } else if (rowData.status === 'Delivering') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: \"Delivering\",\n          className: classes.chip_delivered,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    title: 'Order ID',\n    field: 'orderName'\n  }, {\n    title: 'Order Time',\n    field: 'orderTime',\n    type: 'datetime',\n    cellStyle: {\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Remark',\n    field: 'future',\n    cellStyle: {\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Gross Total',\n    field: 'grossTotal',\n    type: 'currency',\n    currencySetting: {\n      currencyCode: 'THB'\n    }\n  }]; //Global state\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        _useStateValue2$ = _useStateValue2[0],\n        appState = _useStateValue2$.appState,\n        dataState = _useStateValue2$.dataState,\n        dispatch = _useStateValue2[1]; //Local state\n\n\n  const _React$useState = React.useState({\n    columns: columnMetaData,\n    data: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isLoading = _React$useState4[0],\n        setIsLoading = _React$useState4[1]; //Data isloading when button has beenclicked\n  //On click button action\n\n\n  async function deliveringHandle(id, orderId, rowData) {\n    let put_url = '/api/v1/store/order/1112delivery/' + id + '/pickedup';\n    console.group('PUT ' + put_url);\n    await axios.put(put_url, {\n      orderName: orderId\n    }).then(response => {\n      var results = response.data;\n      console.group('API return :');\n      console.log(results);\n      console.groupEnd();\n\n      if (results.id > 0) {\n        dispatch({\n          type: 'REMOVE_READY_PICKUP',\n          data: id\n        });\n        dispatch({\n          type: 'MOVE_TO_DELIVERED',\n          data: rowData\n        });\n      }\n\n      setIsLoading(false);\n    }).catch(error => {\n      console.group('API Error :');\n      console.log(error);\n      console.groupEnd();\n    });\n    console.groupEnd();\n  }\n\n  return React.createElement(MaterialTable, {\n    title: \"Cooking\",\n    isLoading: isLoading,\n    columns: state.columns,\n    data: [...dataState.cooking].concat([...dataState.delivering]).concat([...dataState.delivered]),\n    actions: [{\n      icon: 'save',\n      tooltip: 'Delivering',\n      onClick: (event, rowData) => {\n        setIsLoading(true);\n        deliveringHandle(rowData.databaseId, rowData.orderName, rowData);\n      }\n    }],\n    components: {\n      Action: props => React.createElement(Button, {\n        onClick: event => props.action.onClick(event, props.data),\n        color: \"primary\",\n        variant: \"contained\",\n        className: classes.button,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Cancel\")\n    },\n    actionsColumnIndex: \"1\",\n    filtering: \"true\",\n    options: {\n      padding: 'dense',\n      pageSize: 10,\n      search: false,\n      showTitle: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  });\n};\n\nexport default Cancel;","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Cancel.js"],"names":["React","useEffect","Button","Chip","makeStyles","MaterialTable","axios","useStateValue","useStyles","theme","clicked","disabled","button","margin","spacing","whiteSpace","chip_cooking","backgroundColor","color","chip_ready_pickup","chip_delivered","close","padding","Cancel","props","classes","columnMetaData","title","field","hidden","cellStyle","textAlign","render","rowData","status","type","currencySetting","currencyCode","appState","dataState","dispatch","useState","columns","data","state","setState","isLoading","setIsLoading","deliveringHandle","id","orderId","put_url","console","group","put","orderName","then","response","results","log","groupEnd","catch","error","cooking","concat","delivering","delivered","icon","tooltip","onClick","event","databaseId","Action","action","pageSize","search","showTitle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAAQC,aAAR,QAA4B,yBAA5B;AAGA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAD0B;AAInCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,GAAd,CADJ;AAEJC,IAAAA,UAAU,EAAE;AAFR,GAJ2B;AAQnCC,EAAAA,YAAY,EAAE;AACVH,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,GAAd,CADE;AAEVG,IAAAA,eAAe,EAAE,SAFP;AAGVC,IAAAA,KAAK,EAAE;AAHG,GARqB;AAanCC,EAAAA,iBAAiB,EAAE;AACfN,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,GAAd,CADO;AAEfG,IAAAA,eAAe,EAAE,SAFF;AAGfC,IAAAA,KAAK,EAAE;AAHQ,GAbgB;AAkBnCE,EAAAA,cAAc,EAAE;AACZP,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,GAAd,CADI;AAEZG,IAAAA,eAAe,EAAE,SAFL;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAlBmB;AAwBnCG,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEb,KAAK,CAACK,OAAN,CAAc,GAAd;AADN;AAxB4B,CAAL,CAAN,CAA5B;;AA6BA,MAAMS,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAMkB,cAAc,GAAG,CACnB;AACIC,IAAAA,KAAK,EAAE,IADX;AAEIC,IAAAA,KAAK,EAAE,YAFX;AAGIC,IAAAA,MAAM,EAAE;AAHZ,GADmB,EAMnB;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,KAAK,EAAE,QAFX;AAGIE,IAAAA,SAAS,EAAE;AACPC,MAAAA,SAAS,EAAE,QADJ;AAEPT,MAAAA,OAAO,EAAE;AAFF,KAHf;AAOIU,IAAAA,MAAM,EAAEC,OAAO,IAAI;AAAG;AAClB,UAAGA,OAAO,CAACC,MAAR,KAAmB,SAAtB,EAAiC;AAC7B,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAET,OAAO,CAACT,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH,OAND,MAMM,IAAGiB,OAAO,CAACC,MAAR,KAAmB,iBAAtB,EAAyC;AAC3C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAC,iBAAZ;AAA8B,UAAA,SAAS,EAAET,OAAO,CAACN,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH,OANK,MAMA,IAAGc,OAAO,CAACC,MAAR,KAAmB,YAAtB,EAAoC;AACtC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAC,YAAZ;AAAyB,UAAA,SAAS,EAAET,OAAO,CAACL,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH;AAEJ;AA5BL,GANmB,EAoCnB;AACIO,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GApCmB,EAwCnB;AAAED,IAAAA,KAAK,EAAE,YAAT;AACIC,IAAAA,KAAK,EAAE,WADX;AAEIO,IAAAA,IAAI,EAAE,UAFV;AAGIL,IAAAA,SAAS,EAAE;AACPR,MAAAA,OAAO,EAAE;AADF;AAHf,GAxCmB,EA+CnB;AAAEK,IAAAA,KAAK,EAAE,QAAT;AACIC,IAAAA,KAAK,EAAE,QADX;AAEIE,IAAAA,SAAS,EAAE;AACPR,MAAAA,OAAO,EAAE;AADF;AAFf,GA/CmB,EAqDnB;AAAEK,IAAAA,KAAK,EAAE,aAAT;AACIC,IAAAA,KAAK,EAAE,YADX;AAEIO,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,eAAe,EAAE;AACbC,MAAAA,YAAY,EAAE;AADD;AAHrB,GArDmB,CAAvB,CAFsB,CAgEtB;;AAhEsB,yBAiEsB9B,aAAa,EAjEnC;AAAA;AAAA;AAAA,QAiEb+B,QAjEa,oBAiEbA,QAjEa;AAAA,QAiEHC,SAjEG,oBAiEHA,SAjEG;AAAA,QAiEUC,QAjEV,uBAkEtB;;;AAlEsB,0BAmEIxC,KAAK,CAACyC,QAAN,CAAe;AACrCC,IAAAA,OAAO,EAAEhB,cAD4B;AAErCiB,IAAAA,IAAI,EAAE;AAF+B,GAAf,CAnEJ;AAAA;AAAA,QAmEfC,KAnEe;AAAA,QAmERC,QAnEQ;;AAAA,2BAuEW7C,KAAK,CAACyC,QAAN,CAAe,KAAf,CAvEX;AAAA;AAAA,QAuEfK,SAvEe;AAAA,QAuELC,YAvEK,wBAuEmC;AAEzD;;;AACA,iBAAeC,gBAAf,CAAgCC,EAAhC,EAAoCC,OAApC,EAA6CjB,OAA7C,EAAsD;AAClD,QAAIkB,OAAO,GAAG,sCAAoCF,EAApC,GAAuC,WAArD;AACAG,IAAAA,OAAO,CAACC,KAAR,CAAc,SAAOF,OAArB;AACA,UAAM7C,KAAK,CAACgD,GAAN,CAAUH,OAAV,EAAkB;AACpBI,MAAAA,SAAS,EAAEL;AADS,KAAlB,EAEHM,IAFG,CAEGC,QAAD,IAAc;AAClB,UAAIC,OAAO,GAAGD,QAAQ,CAACd,IAAvB;AACAS,MAAAA,OAAO,CAACC,KAAR,CAAc,cAAd;AACAD,MAAAA,OAAO,CAACO,GAAR,CAAYD,OAAZ;AACAN,MAAAA,OAAO,CAACQ,QAAR;;AAEA,UAAIF,OAAO,CAACT,EAAR,GAAa,CAAjB,EAAqB;AACjBT,QAAAA,QAAQ,CAAC;AACLL,UAAAA,IAAI,EAAE,qBADD;AAELQ,UAAAA,IAAI,EAAEM;AAFD,SAAD,CAAR;AAIAT,QAAAA,QAAQ,CAAC;AACLL,UAAAA,IAAI,EAAE,mBADD;AAELQ,UAAAA,IAAI,EAAEV;AAFD,SAAD,CAAR;AAIH;;AACDc,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,KApBK,EAoBHc,KApBG,CAoBIC,KAAD,IAAS;AACdV,MAAAA,OAAO,CAACC,KAAR,CAAc,aAAd;AACAD,MAAAA,OAAO,CAACO,GAAR,CAAYG,KAAZ;AACAV,MAAAA,OAAO,CAACQ,QAAR;AACH,KAxBK,CAAN;AAyBAR,IAAAA,OAAO,CAACQ,QAAR;AACH;;AAED,SACQ,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,SAAS,EAAEd,SAFf;AAGI,IAAA,OAAO,EAAEF,KAAK,CAACF,OAHnB;AAII,IAAA,IAAI,EAAE,CAAC,GAAGH,SAAS,CAACwB,OAAd,EAAuBC,MAAvB,CAA8B,CAAC,GAAGzB,SAAS,CAAC0B,UAAd,CAA9B,EAAyDD,MAAzD,CAAgE,CAAC,GAAGzB,SAAS,CAAC2B,SAAd,CAAhE,CAJV;AAKI,IAAA,OAAO,EAAE,CAEL;AACIC,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,OAAO,EAAE,YAFb;AAGIC,MAAAA,OAAO,EAAE,CAACC,KAAD,EAAQrC,OAAR,KAAoB;AACzBc,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,QAAAA,gBAAgB,CAACf,OAAO,CAACsC,UAAT,EAAoBtC,OAAO,CAACsB,SAA5B,EAAsCtB,OAAtC,CAAhB;AACH;AANL,KAFK,CALb;AAgBI,IAAA,UAAU,EAAE;AACRuC,MAAAA,MAAM,EAAEhD,KAAK,IACT,oBAAC,MAAD;AACI,QAAA,OAAO,EAAG8C,KAAD,IAAW9C,KAAK,CAACiD,MAAN,CAAaJ,OAAb,CAAqBC,KAArB,EAA4B9C,KAAK,CAACmB,IAAlC,CADxB;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,OAAO,EAAC,WAHZ;AAII,QAAA,SAAS,EAAElB,OAAO,CAACb,MAJvB;AAKI,QAAA,IAAI,EAAC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFI,KAhBhB;AA6BI,IAAA,kBAAkB,EAAC,GA7BvB;AA8BI,IAAA,SAAS,EAAC,MA9Bd;AA+BI,IAAA,OAAO,EAAE;AACLU,MAAAA,OAAO,EAAE,OADJ;AAELoD,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,MAAM,EAAE,KAHH;AAILC,MAAAA,SAAS,EAAE;AAJN,KA/Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AA0CH,CAnJD;;AAqJA,eAAerD,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Button } from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport {useStateValue} from './../../../global/state'\n\n\nconst useStyles = makeStyles(theme => ({\n    clicked: {\n        disabled: true,\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        whiteSpace: 'nowrap'\n    },\n    chip_cooking: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#e31b2f',\n        color: 'white'\n    },\n    chip_ready_pickup: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#e3c768',\n        color: 'white'\n    },\n    chip_delivered: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#1b5e20',\n        color: 'white'\n    },\n\n    close: {\n        padding: theme.spacing(0.5),\n    },\n}));\n\nconst Cancel = (props) => {\n    const classes = useStyles();\n    const columnMetaData = [\n        {\n            title: 'Id',\n            field: 'databaseId',\n            hidden: true\n        },\n        {\n            title: 'Status',\n            field: 'status',\n            cellStyle: {\n                textAlign: 'center',\n                padding: '1px 1px 1px 1px',\n            },\n            render: rowData => {  //props => {\n                if(rowData.status === 'Cooking' ){\n                    return (\n                        <div>\n                            <Chip label=\"Cooking\" className={classes.chip_cooking}/>\n                        </div>\n                    );\n                }else if(rowData.status === 'Ready To Pickup') {\n                    return (\n                        <div>\n                            <Chip label=\"Ready To Pickup\" className={classes.chip_ready_pickup}/>\n                        </div>\n                    );\n                }else if(rowData.status === 'Delivering') {\n                    return (\n                        <div>\n                            <Chip label=\"Delivering\" className={classes.chip_delivered}/>\n                        </div>\n                    );\n                }\n\n            },\n        },\n        {\n            title: 'Order ID',\n            field: 'orderName',\n        },\n        { title: 'Order Time' ,\n            field: 'orderTime',\n            type: 'datetime',\n            cellStyle: {\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        { title: 'Remark',\n            field: 'future',\n            cellStyle: {\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        { title: 'Gross Total',\n            field: 'grossTotal',\n            type: 'currency' ,\n            currencySetting: {\n                currencyCode: 'THB'\n            }\n        },\n    ];\n\n    //Global state\n    const [{ appState ,dataState }, dispatch] = useStateValue();\n    //Local state\n    const [state, setState] = React.useState({\n        columns: columnMetaData,\n        data: []\n    });\n    const [isLoading,setIsLoading] = React.useState(false);  //Data isloading when button has beenclicked\n\n    //On click button action\n    async function deliveringHandle(id ,orderId ,rowData) {\n        let put_url = '/api/v1/store/order/1112delivery/'+id+'/pickedup';\n        console.group('PUT '+put_url);\n        await axios.put(put_url,{\n            orderName: orderId\n        }).then((response) => {\n            var results = response.data;\n            console.group('API return :');\n            console.log(results);\n            console.groupEnd();\n\n            if (results.id > 0 ) {\n                dispatch({\n                    type: 'REMOVE_READY_PICKUP',\n                    data: id\n                });\n                dispatch({\n                    type: 'MOVE_TO_DELIVERED',\n                    data: rowData\n                });\n            }\n            setIsLoading(false);\n\n        }).catch((error)=>{\n            console.group('API Error :');\n            console.log(error);\n            console.groupEnd();\n        })\n        console.groupEnd();\n    }\n\n    return (\n            <MaterialTable\n                title=\"Cooking\"\n                isLoading={isLoading}\n                columns={state.columns}\n                data={[...dataState.cooking].concat([...dataState.delivering]).concat([...dataState.delivered])}\n                actions={[\n\n                    {\n                        icon: 'save',\n                        tooltip: 'Delivering',\n                        onClick: (event, rowData) => {\n                            setIsLoading(true);\n                            deliveringHandle(rowData.databaseId,rowData.orderName,rowData);\n                        }\n                    }\n                ]}\n                components={{\n                    Action: props => (\n                        <Button\n                            onClick={(event) => props.action.onClick(event, props.data)}\n                            color=\"primary\"\n                            variant=\"contained\"\n                            className={classes.button}\n                            size=\"small\"\n                        >\n                            Cancel\n                        </Button>\n                    ),\n                }}\n                actionsColumnIndex=\"1\"\n                filtering='true'\n                options={{\n                    padding: 'dense',\n                    pageSize: 10,\n                    search: false,\n                    showTitle: false,\n\n                }}\n\n            />\n    );\n};\n\nexport default Cancel;"]},"metadata":{},"sourceType":"module"}