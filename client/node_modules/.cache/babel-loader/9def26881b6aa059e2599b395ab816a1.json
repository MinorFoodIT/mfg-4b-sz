{"ast":null,"code":"import _slicedToArray from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Report/SummaryTransaction.js\";\nimport React, { useEffect } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from '../../api/axiosClient';\nimport { useStateValue } from '../../global/state';\nconst useStyles = makeStyles(theme => ({\n  clicked: {\n    disabled: true\n  },\n  button: {\n    margin: theme.spacing(0.5),\n    whiteSpace: 'nowrap',\n    backgroundColor: '#110813',\n    color: 'white'\n  },\n  chip_cooking: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#e31b2f',\n    color: 'white'\n  },\n  chip_ready_pickup: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#e3c768',\n    color: 'white'\n  },\n  chip_delivered: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#1b5e20',\n    color: 'white'\n  },\n  chip_cancelled: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#110813',\n    color: 'white'\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst searchPanel = props => {\n  const _React$useState = React.useState(new Date('2014-08-18T21:11:54')),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        selectedDate = _React$useState2[0],\n        setSelectedDate = _React$useState2[1];\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"Date picker dialog\",\n    format: \"MM/dd/yyyy\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nconst SummaryTransaction = props => {\n  const classes = useStyles();\n  const columnMetaData = [{\n    title: 'Id',\n    field: 'databaseId',\n    hidden: true\n  }, {\n    title: 'Status',\n    field: 'status',\n    cellStyle: {\n      textAlign: 'center',\n      padding: '1px 1px 1px 1px'\n    },\n    render: rowData => {\n      //props => {\n      if (rowData.status === 'Cooking') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: \"Cooking\",\n          className: classes.chip_cooking,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }));\n      } else if (rowData.status === 'Ready To Pickup') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: \"Ready To Pickup\",\n          className: classes.chip_ready_pickup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }));\n      } else if (rowData.status === 'Delivering') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: \"Delivering\",\n          className: classes.chip_delivered,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }));\n      } else if (rowData.status == 'Cancelled') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: \"Cancelled\",\n          className: classes.chip_cencelled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    title: 'Order ID',\n    field: 'orderName'\n  }, {\n    title: 'Order Time',\n    field: 'orderTime',\n    type: 'datetime',\n    cellStyle: {\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Remark',\n    field: 'future',\n    cellStyle: {\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Gross Total',\n    field: 'grossTotal',\n    type: 'currency',\n    currencySetting: {\n      currencyCode: 'THB'\n    }\n  }]; //Global state\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        _useStateValue2$ = _useStateValue2[0],\n        appState = _useStateValue2$.appState,\n        dataState = _useStateValue2$.dataState,\n        dispatch = _useStateValue2[1]; //Local state\n\n\n  const _React$useState3 = React.useState({\n    columns: columnMetaData,\n    data: []\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        isLoading = _React$useState6[0],\n        setIsLoading = _React$useState6[1]; //Data isloading when button has beenclicked\n\n\n  return React.createElement(MaterialTable, {\n    title: React.createElement(MuiPickersUtilsProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }),\n    isLoading: isLoading,\n    columns: state.columns,\n    data: [...dataState.cooking].concat([...dataState.delivering]).concat([...dataState.delivered]).concat([...dataState.cancelled]),\n    filtering: \"true\",\n    options: {\n      padding: 'dense',\n      pageSize: 10,\n      search: true,\n      showTitle: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  });\n};\n\nexport default SummaryTransaction;","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Report/SummaryTransaction.js"],"names":["React","useEffect","Chip","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","makeStyles","MaterialTable","axios","useStateValue","useStyles","theme","clicked","disabled","button","margin","spacing","whiteSpace","backgroundColor","color","chip_cooking","chip_ready_pickup","chip_delivered","chip_cancelled","close","padding","searchPanel","props","useState","Date","selectedDate","setSelectedDate","handleDateChange","date","SummaryTransaction","classes","columnMetaData","title","field","hidden","cellStyle","textAlign","render","rowData","status","chip_cencelled","type","currencySetting","currencyCode","appState","dataState","dispatch","columns","data","state","setState","isLoading","setIsLoading","cooking","concat","delivering","delivered","cancelled","pageSize","search","showTitle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from '../../api/axiosClient';\nimport {useStateValue} from '../../global/state'\n\n\nconst useStyles = makeStyles(theme => ({\n    clicked: {\n        disabled: true,\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        whiteSpace: 'nowrap',\n        backgroundColor: '#110813',\n        color: 'white'\n    },\n    chip_cooking: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#e31b2f',\n        color: 'white'\n    },\n    chip_ready_pickup: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#e3c768',\n        color: 'white'\n    },\n    chip_delivered: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#1b5e20',\n        color: 'white'\n    },\n    chip_cancelled: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#110813',\n        color: 'white'\n    },\n    close: {\n        padding: theme.spacing(0.5),\n    },\n}));\n\nconst searchPanel = (props) => {\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n    const handleDateChange = date => {\n        setSelectedDate(date);\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Date picker dialog\"\n                    format=\"MM/dd/yyyy\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n            </Grid>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nconst SummaryTransaction = (props) => {\n    const classes = useStyles();\n    const columnMetaData = [\n        {\n            title: 'Id',\n            field: 'databaseId',\n            hidden: true\n        },\n        {\n            title: 'Status',\n            field: 'status',\n            cellStyle: {\n                textAlign: 'center',\n                padding: '1px 1px 1px 1px',\n            },\n            render: rowData => {  //props => {\n                if(rowData.status === 'Cooking' ){\n                    return (\n                        <div>\n                            <Chip label=\"Cooking\" className={classes.chip_cooking}/>\n                        </div>\n                    );\n                }else if(rowData.status === 'Ready To Pickup') {\n                    return (\n                        <div>\n                            <Chip label=\"Ready To Pickup\" className={classes.chip_ready_pickup}/>\n                        </div>\n                    );\n                }else if(rowData.status === 'Delivering') {\n                    return (\n                        <div>\n                            <Chip label=\"Delivering\" className={classes.chip_delivered}/>\n                        </div>\n                    );\n                }else if(rowData.status == 'Cancelled'){\n                    return (\n                        <div>\n                            <Chip label=\"Cancelled\" className={classes.chip_cencelled}/>\n                        </div>\n                    );\n                }\n            },\n        },\n        {\n            title: 'Order ID',\n            field: 'orderName',\n        },\n        { title: 'Order Time' ,\n            field: 'orderTime',\n            type: 'datetime',\n            cellStyle: {\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        { title: 'Remark',\n            field: 'future',\n            cellStyle: {\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        { title: 'Gross Total',\n            field: 'grossTotal',\n            type: 'currency' ,\n            currencySetting: {\n                currencyCode: 'THB'\n            }\n        },\n    ];\n\n    //Global state\n    const [{ appState ,dataState }, dispatch] = useStateValue();\n    //Local state\n    const [state, setState] = React.useState({\n        columns: columnMetaData,\n        data: []\n    });\n    const [isLoading,setIsLoading] = React.useState(false);  //Data isloading when button has beenclicked\n\n    return (\n            <MaterialTable\n                title={<MuiPickersUtilsProvider />}\n                isLoading={isLoading}\n                columns={state.columns}\n                data={[...dataState.cooking].concat([...dataState.delivering]).concat([...dataState.delivered]).concat([...dataState.cancelled])}\n                filtering='true'\n                options={{\n                    padding: 'dense',\n                    pageSize: 10,\n                    search: true,\n                    showTitle: true,\n\n                }}\n\n            />\n    );\n};\n\nexport default SummaryTransaction;"]},"metadata":{},"sourceType":"module"}