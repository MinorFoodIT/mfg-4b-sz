{"ast":null,"code":"var _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/global/state.js\";\nimport React, { createContext, useContext, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nexport const StateContext = createContext();\nexport const StateProvider = ({\n  reducer,\n  initialState,\n  children\n}) => React.createElement(StateContext.Provider, {\n  value: useReducer(reducer, initialState),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, children);\nStateProvider.propTypes = {\n  /**\n   * @return {React.Node}\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Object containing initial state value.\n   */\n  initialState: PropTypes.shape({}).isRequired,\n\n  /**\n   *\n   * @param {object} state\n   * @param {object} action\n   */\n  reducer: PropTypes.func.isRequired\n};\nexport const getState = () => useContext(StateContext);","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/global/state.js"],"names":["React","createContext","useContext","useReducer","PropTypes","StateContext","StateProvider","reducer","initialState","children","propTypes","node","isRequired","shape","func","getState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AAEP,OAAO,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA;AAAzB,CAAD,KAC3B,oBAAC,YAAD,CAAc,QAAd;AAAuB,EAAA,KAAK,EAAEN,UAAU,CAACI,OAAD,EAAUC,YAAV,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,QADH,CADK;AAMPH,aAAa,CAACI,SAAd,GAA0B;AACxB;;;AAGAD,EAAAA,QAAQ,EAAEL,SAAS,CAACO,IAAV,CAAeC,UAJD;;AAMxB;;;AAGAJ,EAAAA,YAAY,EAAEJ,SAAS,CAACS,KAAV,CAAgB,EAAhB,EAAoBD,UATV;;AAWxB;;;;;AAKAL,EAAAA,OAAO,EAAEH,SAAS,CAACU,IAAV,CAAeF;AAhBA,CAA1B;AAmBA,OAAO,MAAMG,QAAQ,GAAG,MAAMb,UAAU,CAACG,YAAD,CAAjC","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nStateProvider.propTypes = {\n  /**\n   * @return {React.Node}\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Object containing initial state value.\n   */\n  initialState: PropTypes.shape({}).isRequired,\n\n  /**\n   *\n   * @param {object} state\n   * @param {object} action\n   */\n  reducer: PropTypes.func.isRequired\n};\n\nexport const getState = () => useContext(StateContext);"]},"metadata":{},"sourceType":"module"}