{"ast":null,"code":"import _slicedToArray from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Cooking.js\";\nimport React, { useEffect } from 'react';\nimport { AddBox, ArrowUpward } from \"@material-ui/icons\";\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport { useStateValue } from './../../../global/state';\nconst useStyles = makeStyles(theme => ({\n  clicked: {\n    disabled: true\n  },\n  button: {\n    margin: theme.spacing(0.5)\n  }\n}));\n\nconst Cooking = props => {\n  const classes = useStyles();\n  const columnMetaData = [{\n    title: 'Action',\n    field: 'action',\n    render: props => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: e => console.log('cooking button clicked') //props.onChange(e.target.value)\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Ready to pickup\")),\n    cellStyle: {\n      padding: '1px'\n    }\n  }, {\n    title: 'Status',\n    field: 'status',\n    cellStyle: {\n      backgroundColor: '#e31b2f',\n      color: 'white',\n      textAlign: 'center',\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Order ID',\n    field: 'orderName' //lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\n  }, {\n    title: 'Order Time',\n    field: 'orderTime',\n    type: 'datetime',\n    cellStyle: {\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Remark',\n    field: 'future',\n    cellStyle: {\n      padding: '1px 1px 1px 1px'\n    }\n  }, {\n    title: 'Gross Total',\n    field: 'grossTotal',\n    type: 'currency'\n  }]; //Local state\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        intervalId = _React$useState2[0],\n        setIntervalId = _React$useState2[1]; //Global state\n\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        _useStateValue2$ = _useStateValue2[0],\n        appState = _useStateValue2$.appState,\n        dataState = _useStateValue2$.dataState,\n        dispatch = _useStateValue2[1]; //Hook use Local state\n\n\n  const _React$useState3 = React.useState({\n    columns: columnMetaData,\n    data: [{\n      status: 'cooking',\n      future: '2019-07-17 13:30:15',\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12345',\n      grossTotal: \"323.25\",\n      refID: \"12345\"\n    }, {\n      status: 'cooking',\n      future: '2019-07-17 13:30:15',\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12346',\n      grossTotal: \"500.00\",\n      refID: \"12346\"\n    }, {\n      status: 'cooking',\n      future: '2019-07-17 13:30:15',\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12347',\n      grossTotal: \"33.5\",\n      refID: \"12347\"\n    }]\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1];\n\n  function freshOrdersInStore() {\n    console.group('freshOrdersInStore');\n    console.groupEnd();\n    let get_url = '/api/v1/store/orders/1112delivery/' + appState.sitegroup + '/' + appState.store;\n    axios.get(get_url).then(response => {\n      if (response.data) {\n        var results = response.data;\n        console.group(get_url);\n        console.log('API return :');\n        console.log(results);\n        console.groupEnd();\n\n        if (results.length > 0) {\n          dispatch({\n            type: 'FRESH_ORDER_INSTORE_SUCCESS',\n            data: results\n          });\n        }\n\n        console.group('StateObject');\n        console.log(appState);\n        console.log(dataState);\n        console.groupEnd();\n      }\n    }).catch(error => {\n      console.log('API error ,could not get data ' + error);\n    });\n  } //First time loading\n\n\n  useEffect(() => {\n    freshOrdersInStore();\n    let id = setInterval(function () {\n      freshOrdersInStore();\n    }, dataState.interval);\n    setIntervalId(id); //Get order in store,\n    //Set to state\n    //freshOrdersInStore();\n\n    return function cleanup() {\n      clearInterval(id);\n    };\n  }, []);\n  useEffect(() => {\n    //Map data appstate to cooking line\n    var orders = [...dataState.order_instore];\n    var cookingOrders = orders.filter(order => {\n      return order.cookingFinishTime === null && order.pickupFinishTime === null;\n    });\n    const cookingRows = cookingOrders.map(row => {\n      var raw = JSON.parse(row.json);\n      return {\n        status: 'cooking',\n        orderName: row.orderName,\n        orderTime: row.tranDate,\n        future: row.orderType == 0 ? '' : row.dueDate,\n        grossTotal: raw.SDM.GrossTotal\n      };\n    });\n    setState({\n      columns: columnMetaData,\n      data: cookingRows\n    });\n  }, [appState.order_instore]);\n  /*\n  useEffect(() => {\n      function handleStatusChange(status) {\n        setIsOnline(status.isOnline);\n      }\n       //[componentWillMount ,componentDidMount ,componentDidUpdate]\n      ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n       //[componentWillUnmount()]\n      // Specify how to clean up after this effect:\n      return function cleanup() {\n        ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n      };\n    });\n     .MuiTableCell-sizeSmall {\n          padding: 1px 1px 1px 1px;\n      }\n    */\n\n  return React.createElement(MaterialTable, {\n    title: \"Cooking\",\n    columns: state.columns,\n    data: state.data,\n    actionsColumnIndex: \"1\",\n    filtering: \"true\",\n    options: {\n      padding: 'dense',\n      pageSize: 10,\n      search: false,\n      showTitle: false,\n      //rowStyle: { backgroundColor: 'green'},\n      rowStyle: rowData => {\n        if (rowData.status === \"\") {\n          return {\n            backgroundColor: 'red'\n          };\n        }\n\n        return {};\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  });\n};\n\nexport default Cooking;","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Cooking.js"],"names":["React","useEffect","AddBox","ArrowUpward","Button","makeStyles","MaterialTable","axios","useStateValue","useStyles","theme","clicked","disabled","button","margin","spacing","Cooking","props","classes","columnMetaData","title","field","render","e","console","log","cellStyle","padding","backgroundColor","color","textAlign","type","useState","intervalId","setIntervalId","appState","dataState","dispatch","columns","data","status","future","orderTime","storeName","orderName","grossTotal","refID","state","setState","freshOrdersInStore","group","groupEnd","get_url","sitegroup","store","get","then","response","results","length","catch","error","id","setInterval","interval","cleanup","clearInterval","orders","order_instore","cookingOrders","filter","order","cookingFinishTime","pickupFinishTime","cookingRows","map","row","raw","JSON","parse","json","tranDate","orderType","dueDate","SDM","GrossTotal","pageSize","search","showTitle","rowStyle","rowData"],"mappings":"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","sourcesContent":["import React ,{useEffect} from 'react';\n\nimport { AddBox, ArrowUpward } from \"@material-ui/icons\";\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport {useStateValue} from './../../../global/state'\n\n\nconst useStyles = makeStyles(theme => ({\n    clicked: {\n        disabled: true,\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nconst Cooking = (props) => {\n    const classes = useStyles();\n    const columnMetaData = [\n        {\n            title: 'Action',\n            field: 'action',\n            render: props => (\n                <div>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={e => console.log('cooking button clicked')} //props.onChange(e.target.value)\n                    >\n                        Ready to pickup\n                    </Button>\n                </div>\n            ),\n            cellStyle: {\n                padding: '1px',\n            }\n        },\n        {\n            title: 'Status',\n            field: 'status',\n            cellStyle: {\n                backgroundColor: '#e31b2f',\n                color: 'white',\n                textAlign: 'center',\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        {\n            title: 'Order ID',\n            field: 'orderName',\n            //lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\n        },\n        { title: 'Order Time' ,\n            field: 'orderTime',\n            type: 'datetime',\n            cellStyle: {\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        { title: 'Remark',\n            field: 'future',\n            cellStyle: {\n                padding: '1px 1px 1px 1px',\n            }\n        },\n        { title: 'Gross Total',\n            field: 'grossTotal',\n            type: 'currency' ,\n\n        },\n    ];\n\n    //Local state\n    const [intervalId,setIntervalId] = React.useState();\n\n    //Global state\n    const [{ appState ,dataState }, dispatch] = useStateValue();\n\n    //Hook use Local state\n    const [state, setState] = React.useState({\n        columns: columnMetaData,\n        data: [\n            { status: 'cooking', future: '2019-07-17 13:30:15' , orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12345', grossTotal: \"323.25\", refID: \"12345\" },\n            { status: 'cooking', future: '2019-07-17 13:30:15' , orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12346', grossTotal: \"500.00\", refID: \"12346\" },\n            { status: 'cooking', future: '2019-07-17 13:30:15' , orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12347', grossTotal: \"33.5\", refID: \"12347\" },\n            /*\n            {\n              name: 'Zerya Betül',\n              surname: 'Baran',\n              birthYear: 2017,\n              birthCity: 34,\n            },\n            */\n        ],\n    });\n\n    function freshOrdersInStore() {\n        console.group('freshOrdersInStore');\n        console.groupEnd();\n        let get_url = '/api/v1/store/orders/1112delivery/'+appState.sitegroup+'/'+appState.store\n        axios.get(get_url)\n            .then((response)=>{\n                if(response.data){\n                    var results = response.data;\n                    console.group(get_url);\n                    console.log('API return :');\n                    console.log(results);\n                    console.groupEnd();\n\n                    if (results.length > 0 ) {\n                        dispatch({\n                            type: 'FRESH_ORDER_INSTORE_SUCCESS',\n                            data: results\n                        });\n                    }\n                    console.group('StateObject');\n                    console.log(appState);\n                    console.log(dataState);\n                    console.groupEnd();\n                }\n            }).catch((error)=>{\n            console.log('API error ,could not get data '+error )\n        })\n    }\n\n    //First time loading\n    useEffect(() => {\n        freshOrdersInStore();\n        let id = setInterval(function () {\n            freshOrdersInStore();\n        },dataState.interval)\n        setIntervalId(id);\n\n        //Get order in store,\n        //Set to state\n        //freshOrdersInStore();\n\n        return function cleanup() {\n            clearInterval(id);\n        };\n    },[]);\n\n    useEffect(() => {\n        //Map data appstate to cooking line\n        var orders = [...dataState.order_instore];\n        var cookingOrders = orders.filter(order => {\n            return order.cookingFinishTime === null && order.pickupFinishTime === null\n        })\n\n        const cookingRows = cookingOrders.map(row => {\n            var raw =  JSON.parse(row.json);\n            return {\n                status: 'cooking',\n                orderName: row.orderName,\n                orderTime: row.tranDate,\n                future: row.orderType == 0 ? '' : row.dueDate,\n                grossTotal: raw.SDM.GrossTotal\n\n            }\n        })\n\n        setState({\n            columns: columnMetaData,\n            data: cookingRows\n        });\n    },[appState.order_instore]);\n\n    /*\n    useEffect(() => {\n        function handleStatusChange(status) {\n          setIsOnline(status.isOnline);\n        }\n\n        //[componentWillMount ,componentDidMount ,componentDidUpdate]\n        ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n\n        //[componentWillUnmount()]\n        // Specify how to clean up after this effect:\n        return function cleanup() {\n          ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n        };\n      });\n\n      .MuiTableCell-sizeSmall {\n            padding: 1px 1px 1px 1px;\n        }\n      */\n\n    return (\n        <MaterialTable\n            title=\"Cooking\"\n            columns={state.columns}\n            data={state.data}\n            actionsColumnIndex=\"1\"\n            filtering='true'\n            options={{\n                padding: 'dense',\n                pageSize: 10,\n                search: false,\n                showTitle: false,\n                //rowStyle: { backgroundColor: 'green'},\n                rowStyle: rowData => {\n                    if(rowData.status === \"\") {\n                        return {backgroundColor: 'red'};\n                    }\n\n                    return {};\n                }\n            }}\n\n        />\n    );\n};\n\nexport default Cooking;"]},"metadata":{},"sourceType":"module"}