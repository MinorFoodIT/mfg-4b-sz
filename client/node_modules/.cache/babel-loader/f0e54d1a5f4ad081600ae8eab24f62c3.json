{"ast":null,"code":"import _slicedToArray from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/containers/Layout/Layout.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Aux from '../../hoc/Aux/Aux'; //import classes from './Layout.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport { mainListItems, secondaryListItems } from './ListItems';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px'\n  }, theme.mixins.toolbar),\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nconst Layout = props => {\n  const classes = useStyles();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"absolute\",\n    className: clsx(classes.appBar, open && classes.appBarShift),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"Open drawer\",\n    onClick: handleDrawerOpen,\n    className: clsx(classes.menuButton, open && classes.menuButtonHidden),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"title\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"My header\"))), React.createElement(Drawer, {\n    variant: \"permanent\",\n    classes: {\n      paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n    },\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, mainListItems), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })));\n};\n\nexport default Layout;\n/*\n<main className={classes.Content}>\n{props.children}\n</main>\n*/","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/containers/Layout/Layout.js"],"names":["React","useState","clsx","makeStyles","Aux","CssBaseline","AppBar","Toolbar","IconButton","Typography","MenuIcon","Drawer","ChevronLeftIcon","Divider","List","mainListItems","secondaryListItems","drawerWidth","useStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Layout","props","classes","open","setOpen","handleDrawerOpen","handleDrawerClose"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Aux from '../../hoc/Aux/Aux'\n//import classes from './Layout.css'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport { mainListItems, secondaryListItems } from './ListItems';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }));\n  \n\nconst Layout = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(true);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={handleDrawerOpen}\n                            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"title\"\n                            color=\"inherit\"\n                        >\n                            My header\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                    }}\n                    open={open}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={handleDrawerClose}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>{mainListItems}</List>\n                    \n                    <Divider />\n                    {/*\n                    <List>{secondaryListItems}</List>\n                    */}\n                </Drawer>\n            </div>\n    );\n}\n\nexport default Layout;\n\n/*\n<main className={classes.Content}>\n{props.children}\n</main>\n*/"]},"metadata":{},"sourceType":"module"}