{"ast":null,"code":"import _objectSpread from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/App.js\";\nimport React from 'react';\nimport { StateProvider, persistState } from './global/state';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Layout from './containers/Layout/Layout';\nimport LayoutOfManager from './containers/Layout/LayoutOfManager';\nimport Login from './containers/Login/Login';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1b5e20' //134e32\n\n    },\n    secondary: {\n      main: '#73c5be' //e31b2f\n\n    }\n  },\n  status: {\n    danger: 'orange'\n  }\n}); //const AppContext = React.createContext();\n\nconst App = props => {\n  const initialState = {\n    appState: {\n      logon: false,\n      role: '',\n      username: '',\n      store: '',\n      sitegroup: ''\n    },\n    dataState: {\n      interval: 60000,\n      order_instore: []\n    },\n    previousState: {}\n  };\n  const persistedState = sessionStorage.getItem(\"sessionstate\") ? JSON.parse(sessionStorage.getItem(\"sessionstate\")) : initialState;\n\n  const reducer = (state, action) => {\n    console.group('Reducer :');\n    console.log('action : ' + action);\n    console.groupEnd();\n\n    switch (action.type) {\n      case 'LOGIN_SUCCESS':\n        var saved = Object.assign(_objectSpread({}, state));\n        saved.appState.logon = true;\n        saved.appState.username = action.data.username;\n        saved.appState.role = action.data.role;\n        saved.appState.store = action.data.site;\n        saved.appState.sitegroup = action.data.sitegroup;\n        persistState(saved);\n        return _objectSpread({}, saved);\n\n      case 'FRESH_ORDER_INSTORE_SUCCESS':\n        var saved = Object.assign(_objectSpread({}, state));\n        saved.dataState.order_instore = action.data; //data is list of rows []\n\n        persistState(saved);\n        return _objectSpread({}, saved);\n\n      default:\n        return state;\n    }\n  };\n\n  const checkForAuth = (props, path) => {\n    console.log('log on state : ' + persistedState.appState.logon);\n\n    if (persistedState.appState.logon) {\n      /*\n      if(path === '/ordering'){\n        return (\n          <Layout>\n            <Ordering></Ordering>\n          </Layout>\n        );\n      }else if(path === '/order_ready'){\n        return (\n          <Layout>\n            <OrderReady></OrderReady>\n          </Layout>\n        );\n      }else if(path === '/driver_ready'){\n        return (\n          <Layout>\n            <DriverReady></DriverReady>\n          </Layout>\n        );\n      }else\n      {\n        return (\n          <Layout>\n            <Ordering></Ordering>\n          </Layout>\n        );\n      }\n      */\n      if (persistedState.appState.role == 'user') {\n        return React.createElement(Layout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \" /* \", props.children, \"*/\");\n      } else if (persistedState.appState.role == 'manager') {\n        return React.createElement(LayoutOfManager, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"login\"));\n  };\n\n  const switchRoute = props => {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/ordering\",\n      render: props => checkForAuth(props, '/ordering'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/order_ready\",\n      render: props => checkForAuth(props, '/order_ready'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/driver_ready\",\n      render: props => checkForAuth(props, '/driver_ready'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: props => checkForAuth(props, '/ordering'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(StateProvider, {\n    initialState: persistedState,\n    reducer: reducer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, switchRoute(props)))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/App.js"],"names":["React","StateProvider","persistState","CssBaseline","ThemeProvider","createMuiTheme","BrowserRouter","Router","Switch","Route","Layout","LayoutOfManager","Login","theme","palette","primary","main","secondary","status","danger","App","props","initialState","appState","logon","role","username","store","sitegroup","dataState","interval","order_instore","previousState","persistedState","sessionStorage","getItem","JSON","parse","reducer","state","action","console","group","log","groupEnd","type","saved","Object","assign","data","site","checkForAuth","path","children","switchRoute"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StateProvider, persistState } from './global/state'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Layout from './containers/Layout/Layout'\nimport LayoutOfManager from './containers/Layout/LayoutOfManager'\nimport Login from './containers/Login/Login'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1b5e20', //134e32\n    },\n    secondary: {\n      main: '#73c5be', //e31b2f\n    },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\n//const AppContext = React.createContext();\n\nconst App = (props) => {\n  const initialState = {\n    appState: {\n      logon: false,\n      role: '',\n      username: '',\n      store: '',\n      sitegroup: '',\n    },\n    dataState: {\n      interval: 60000,\n      order_instore: []\n    },\n    previousState: {}\n  }\n\n  const persistedState = sessionStorage.getItem(\"sessionstate\")\n    ? JSON.parse(sessionStorage.getItem(\"sessionstate\"))\n    : initialState;\n\n  const reducer = (state, action) => {\n    console.group('Reducer :');\n    console.log('action : '+action);\n    console.groupEnd();\n    switch (action.type) {\n      case 'LOGIN_SUCCESS':\n        var saved = Object.assign({ ...state });\n        saved.appState.logon = true;\n        saved.appState.username = action.data.username;\n        saved.appState.role = action.data.role;\n        saved.appState.store = action.data.site;\n        saved.appState.sitegroup = action.data.sitegroup;\n        persistState(saved);\n        return {\n          ...saved,\n          //theme: action.newTheme\n        };\n      case 'FRESH_ORDER_INSTORE_SUCCESS':\n        var saved = Object.assign({ ...state });\n        saved.dataState.order_instore = action.data; //data is list of rows []\n        persistState(saved);\n        return {\n          ...saved,\n        };\n      default:\n        return state;\n    }\n\n  };\n\n  const checkForAuth = (props,path) => {\n    console.log('log on state : ' + persistedState.appState.logon);\n    if (persistedState.appState.logon) {\n      /*\n      if(path === '/ordering'){\n        return (\n          <Layout>\n            <Ordering></Ordering>\n          </Layout>\n        );\n      }else if(path === '/order_ready'){\n        return (\n          <Layout>\n            <OrderReady></OrderReady>\n          </Layout>\n        );\n      }else if(path === '/driver_ready'){\n        return (\n          <Layout>\n            <DriverReady></DriverReady>\n          </Layout>\n        );\n      }else\n      {\n        return (\n          <Layout>\n            <Ordering></Ordering>\n          </Layout>\n        );\n      }\n      */\n      if(persistedState.appState.role == 'user') {\n        return (<Layout> /* {props.children}*/</Layout>);\n      }else if(persistedState.appState.role == 'manager'){\n        return (<LayoutOfManager/>);\n      }\n    }\n    return (\n      <Login>\n        <div>login</div>\n      </Login>\n    );\n  };\n\n  const switchRoute = (props) => {\n  \n    return (\n      <Switch>\n        <Route exact path='/ordering'\n          render={(props) => checkForAuth(props,'/ordering')} />\n        <Route exact path='/order_ready'\n          render={(props) => checkForAuth(props,'/order_ready')} />\n        <Route exact path='/driver_ready'\n          render={(props) => checkForAuth(props,'/driver_ready')} />\n        <Route render={(props) => checkForAuth(props,'/ordering')} />\n      </Switch>\n    );\n  };\n\n  return (\n    <StateProvider initialState={persistedState} reducer={reducer}>\n      <React.Fragment>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Router>\n            {switchRoute(props)}\n          </Router>\n        </ThemeProvider>\n      </React.Fragment>\n    </StateProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}