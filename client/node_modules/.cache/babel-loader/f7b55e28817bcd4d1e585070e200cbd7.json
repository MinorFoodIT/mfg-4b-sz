{"ast":null,"code":"import _slicedToArray from \"/Users/Macbook/WebstormProjects/mfg-4b-sz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Cooking.js\";\nimport React, { useEffect } from 'react';\nimport { AddBox, ArrowUpward } from \"@material-ui/icons\";\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport { useStateValue } from './../../../global/state';\nconst useStyles = makeStyles(theme => ({\n  clicked: {\n    disabled: true\n  },\n  button: {\n    margin: theme.spacing(0.5)\n  }\n}));\n\nconst Cooking = props => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        intervalId = _React$useState2[0],\n        setIntervalId = _React$useState2[1];\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        _useStateValue2$ = _useStateValue2[0],\n        appState = _useStateValue2$.appState,\n        dataState = _useStateValue2$.dataState,\n        dispatch = _useStateValue2[1];\n\n  function freshOrdersInStore() {\n    console.group('freshOrdersInStore');\n    console.groupEnd();\n    axios.get('/api/v1/store/orders/1112delivery/' + appState.sitegroup + '/' + appState.site).then(response => {\n      if (response.data) {\n        var results = response.data;\n        console.group('API_order_instore');\n        console.log('API return :');\n        console.log(results);\n        console.groupEnd();\n\n        if (results.length > 0) {\n          dispatch({\n            type: 'FRESH_ORDER_INSTORE_SUCCESS',\n            data: results\n          });\n        }\n\n        console.group('DataState');\n        console.log(appState);\n        console.log(dataState);\n        console.groupEnd();\n      }\n    }).catch(error => {\n      console.log('API error ,could not sign in');\n    });\n  } //Hook use Local state\n\n\n  const _React$useState3 = React.useState({\n    columns: [{\n      title: 'Action',\n      field: 'action',\n      render: props => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: e => console.log('cooking button clicked') //props.onChange(e.target.value)\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Ready to pickup\")),\n      cellStyle: {\n        padding: '1px'\n      }\n    }, {\n      title: 'Status',\n      field: 'status',\n      cellStyle: {\n        backgroundColor: '#e31b2f',\n        color: 'white',\n        textAlign: 'center',\n        padding: '1px 1px 1px 1px'\n      }\n    }, {\n      title: 'Order ID',\n      field: 'orderName' //lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\n    }, {\n      title: 'Order Time',\n      field: 'orderTime',\n      type: 'datetime',\n      cellStyle: {\n        padding: '1px 1px 1px 1px'\n      }\n    }, {\n      title: 'Remark',\n      field: 'future',\n      cellStyle: {\n        padding: '1px 1px 1px 1px'\n      }\n    }, {\n      title: 'Gross Total',\n      field: 'grossTotal',\n      type: 'currency'\n    }],\n    data: [{\n      status: 'cooking',\n      future: '2019-07-17 13:30:15',\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12345',\n      grossTotal: \"323.25\",\n      refID: \"12345\"\n    }, {\n      status: 'cooking',\n      future: '2019-07-17 13:30:15',\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12346',\n      grossTotal: \"500.00\",\n      refID: \"12346\"\n    }, {\n      status: 'cooking',\n      future: '2019-07-17 13:30:15',\n      orderTime: '2019-07-17 13:00:15',\n      storeName: 'Lab Avani',\n      orderName: 'TPC ref 12347',\n      grossTotal: \"33.5\",\n      refID: \"12347\"\n    }]\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1]; //First time loading\n\n\n  useEffect(() => {\n    let id = setInterval(function () {\n      freshOrdersInStore();\n    }, dataState.interval);\n    setIntervalId(id); //Get order in store,\n    //Set to state\n    //freshOrdersInStore();\n\n    return function cleanup() {\n      clearInterval(id);\n    };\n  }, []);\n  /*\n  useEffect(() => {\n      function handleStatusChange(status) {\n        setIsOnline(status.isOnline);\n      }\n       //[componentWillMount ,componentDidMount ,componentDidUpdate]\n      ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n       //[componentWillUnmount()]\n      // Specify how to clean up after this effect:\n      return function cleanup() {\n        ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n      };\n    });\n     .MuiTableCell-sizeSmall {\n          padding: 1px 1px 1px 1px;\n      }\n    */\n\n  return React.createElement(MaterialTable, {\n    title: \"Cooking\",\n    columns: state.columns,\n    data: state.data,\n    actionsColumnIndex: \"1\",\n    filtering: \"true\",\n    options: {\n      padding: 'dense',\n      pageSize: 10,\n      search: false,\n      showTitle: false,\n      //rowStyle: { backgroundColor: 'green'},\n      rowStyle: rowData => {\n        if (rowData.status === \"\") {\n          return {\n            backgroundColor: 'red'\n          };\n        }\n\n        return {};\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  });\n};\n\nexport default Cooking;","map":{"version":3,"sources":["/Users/Macbook/WebstormProjects/mfg-4b-sz/src/components/Store/Ordering/Cooking.js"],"names":["React","useEffect","AddBox","ArrowUpward","Button","makeStyles","MaterialTable","axios","useStateValue","useStyles","theme","clicked","disabled","button","margin","spacing","Cooking","props","classes","useState","intervalId","setIntervalId","appState","dataState","dispatch","freshOrdersInStore","console","group","groupEnd","get","sitegroup","site","then","response","data","results","log","length","type","catch","error","columns","title","field","render","e","cellStyle","padding","backgroundColor","color","textAlign","status","future","orderTime","storeName","orderName","grossTotal","refID","state","setState","id","setInterval","interval","cleanup","clearInterval","pageSize","search","showTitle","rowStyle","rowData"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,oBAApC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAAQC,aAAR,QAA4B,yBAA5B;AAGA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAD0B;AAInCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,GAAd;AADJ;AAJ2B,CAAL,CAAN,CAA5B;;AASA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AADuB,0BAGYT,KAAK,CAACmB,QAAN,EAHZ;AAAA;AAAA,QAGhBC,UAHgB;AAAA,QAGLC,aAHK;;AAAA,yBAIqBb,aAAa,EAJlC;AAAA;AAAA;AAAA,QAIdc,QAJc,oBAIdA,QAJc;AAAA,QAIJC,SAJI,oBAIJA,SAJI;AAAA,QAISC,QAJT;;AAMvB,WAASC,kBAAT,GAA8B;AAC1BC,IAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd;AACAD,IAAAA,OAAO,CAACE,QAAR;AACArB,IAAAA,KAAK,CAACsB,GAAN,CAAU,uCAAqCP,QAAQ,CAACQ,SAA9C,GAAwD,GAAxD,GAA4DR,QAAQ,CAACS,IAA/E,EACCC,IADD,CACOC,QAAD,IAAY;AACd,UAAGA,QAAQ,CAACC,IAAZ,EAAiB;AACb,YAAIC,OAAO,GAAGF,QAAQ,CAACC,IAAvB;AACAR,QAAAA,OAAO,CAACC,KAAR,CAAc,mBAAd;AACAD,QAAAA,OAAO,CAACU,GAAR,CAAY,cAAZ;AACAV,QAAAA,OAAO,CAACU,GAAR,CAAYD,OAAZ;AACAT,QAAAA,OAAO,CAACE,QAAR;;AACA,YAAIO,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB;AACpBb,UAAAA,QAAQ,CAAC;AACLc,YAAAA,IAAI,EAAE,6BADD;AAELJ,YAAAA,IAAI,EAAEC;AAFD,WAAD,CAAR;AAIH;;AAEDT,QAAAA,OAAO,CAACC,KAAR,CAAc,WAAd;AACAD,QAAAA,OAAO,CAACU,GAAR,CAAYd,QAAZ;AACAI,QAAAA,OAAO,CAACU,GAAR,CAAYb,SAAZ;AACAG,QAAAA,OAAO,CAACE,QAAR;AACH;AACJ,KApBD,EAoBGW,KApBH,CAoBUC,KAAD,IAAS;AACdd,MAAAA,OAAO,CAACU,GAAR,CAAY,8BAAZ;AACH,KAtBD;AAuBH,GAhCsB,CAmCvB;;;AAnCuB,2BAoCGpC,KAAK,CAACmB,QAAN,CAAe;AACrCsB,IAAAA,OAAO,EAAE,CACL;AACIC,MAAAA,KAAK,EAAE,QADX;AAEIC,MAAAA,KAAK,EAAE,QAFX;AAGIC,MAAAA,MAAM,EAAE3B,KAAK,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,SAAS,EAAEC,OAAO,CAACL,MAHvB;AAII,QAAA,OAAO,EAAEgC,CAAC,IAAInB,OAAO,CAACU,GAAR,CAAY,wBAAZ,CAJlB,CAIyD;AAJzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CAJR;AAeIU,MAAAA,SAAS,EAAE;AACPC,QAAAA,OAAO,EAAE;AADF;AAff,KADK,EAoBL;AACGL,MAAAA,KAAK,EAAE,QADV;AAEGC,MAAAA,KAAK,EAAE,QAFV;AAGGG,MAAAA,SAAS,EAAE;AACPE,QAAAA,eAAe,EAAE,SADV;AAEPC,QAAAA,KAAK,EAAE,OAFA;AAGPC,QAAAA,SAAS,EAAE,QAHJ;AAIPH,QAAAA,OAAO,EAAE;AAJF;AAHd,KApBK,EA8BL;AACIL,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,KAAK,EAAE,WAFX,CAGI;;AAHJ,KA9BK,EAoCL;AAAED,MAAAA,KAAK,EAAE,YAAT;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEL,MAAAA,IAAI,EAAE,UAFR;AAGEQ,MAAAA,SAAS,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD;AAHb,KApCK,EA2CL;AAAEL,MAAAA,KAAK,EAAE,QAAT;AACEC,MAAAA,KAAK,EAAE,QADT;AAEEG,MAAAA,SAAS,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD;AAFb,KA3CK,EAiDL;AAAEL,MAAAA,KAAK,EAAE,aAAT;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEL,MAAAA,IAAI,EAAE;AAFR,KAjDK,CAD4B;AAwDrCJ,IAAAA,IAAI,EAAE,CAEF;AAAEiB,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,MAAM,EAAE,qBAA7B;AAAqDC,MAAAA,SAAS,EAAE,qBAAhE;AAAsFC,MAAAA,SAAS,EAAE,WAAjG;AAA8GC,MAAAA,SAAS,EAAE,eAAzH;AAA0IC,MAAAA,UAAU,EAAE,QAAtJ;AAAgKC,MAAAA,KAAK,EAAE;AAAvK,KAFE,EAGF;AAAEN,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,MAAM,EAAE,qBAA7B;AAAqDC,MAAAA,SAAS,EAAE,qBAAhE;AAAsFC,MAAAA,SAAS,EAAE,WAAjG;AAA8GC,MAAAA,SAAS,EAAE,eAAzH;AAA0IC,MAAAA,UAAU,EAAE,QAAtJ;AAAgKC,MAAAA,KAAK,EAAE;AAAvK,KAHE,EAIF;AAAEN,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,MAAM,EAAE,qBAA7B;AAAqDC,MAAAA,SAAS,EAAE,qBAAhE;AAAsFC,MAAAA,SAAS,EAAE,WAAjG;AAA8GC,MAAAA,SAAS,EAAE,eAAzH;AAA0IC,MAAAA,UAAU,EAAE,MAAtJ;AAA8JC,MAAAA,KAAK,EAAE;AAArK,KAJE;AAxD+B,GAAf,CApCH;AAAA;AAAA,QAoChBC,KApCgB;AAAA,QAoCTC,QApCS,wBA4GvB;;;AACA1D,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI2D,EAAE,GAAGC,WAAW,CAAC,YAAY;AAC7BpC,MAAAA,kBAAkB;AACrB,KAFmB,EAElBF,SAAS,CAACuC,QAFQ,CAApB;AAGAzC,IAAAA,aAAa,CAACuC,EAAD,CAAb,CAJY,CAMZ;AACA;AACA;;AAEA,WAAO,SAASG,OAAT,GAAmB;AACtBC,MAAAA,aAAa,CAACJ,EAAD,CAAb;AACH,KAFD;AAGH,GAbQ,EAaP,EAbO,CAAT;AAeA;;;;;;;;;;;;;;;;;;AAqBA,SACI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,OAAO,EAAEF,KAAK,CAACjB,OAFnB;AAGI,IAAA,IAAI,EAAEiB,KAAK,CAACxB,IAHhB;AAII,IAAA,kBAAkB,EAAC,GAJvB;AAKI,IAAA,SAAS,EAAC,MALd;AAMI,IAAA,OAAO,EAAE;AACLa,MAAAA,OAAO,EAAE,OADJ;AAELkB,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,MAAM,EAAE,KAHH;AAILC,MAAAA,SAAS,EAAE,KAJN;AAKL;AACAC,MAAAA,QAAQ,EAAEC,OAAO,IAAI;AACjB,YAAGA,OAAO,CAAClB,MAAR,KAAmB,EAAtB,EAA0B;AACtB,iBAAO;AAACH,YAAAA,eAAe,EAAE;AAAlB,WAAP;AACH;;AAED,eAAO,EAAP;AACH;AAZI,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAwBH,CAzKD;;AA2KA,eAAehC,OAAf","sourcesContent":["import React ,{useEffect} from 'react';\n\nimport { AddBox, ArrowUpward } from \"@material-ui/icons\";\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport axios from './../../../api/axiosClient';\nimport {useStateValue} from './../../../global/state'\n\n\nconst useStyles = makeStyles(theme => ({\n    clicked: {\n        disabled: true,\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nconst Cooking = (props) => {\n    const classes = useStyles();\n\n    const [intervalId,setIntervalId] = React.useState();\n    const [{ appState ,dataState }, dispatch] = useStateValue();\n\n    function freshOrdersInStore() {\n        console.group('freshOrdersInStore');\n        console.groupEnd();\n        axios.get('/api/v1/store/orders/1112delivery/'+appState.sitegroup+'/'+appState.site)\n        .then((response)=>{\n            if(response.data){\n                var results = response.data;\n                console.group('API_order_instore');\n                console.log('API return :');\n                console.log(results);\n                console.groupEnd();\n                if (results.length > 0) {\n                    dispatch({\n                        type: 'FRESH_ORDER_INSTORE_SUCCESS',\n                        data: results\n                    });\n                }\n\n                console.group('DataState');\n                console.log(appState);\n                console.log(dataState);\n                console.groupEnd();\n            }\n        }).catch((error)=>{\n            console.log('API error ,could not sign in')\n        })\n    }\n    \n\n    //Hook use Local state\n    const [state, setState] = React.useState({\n        columns: [\n            {\n                title: 'Action',\n                field: 'action',\n                render: props => (\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={e => console.log('cooking button clicked')} //props.onChange(e.target.value)\n                        >\n                            Ready to pickup\n                        </Button>\n                    </div>\n                ),\n                cellStyle: {\n                    padding: '1px',\n                }\n            },\n            {\n               title: 'Status',\n               field: 'status',\n               cellStyle: {\n                   backgroundColor: '#e31b2f',\n                   color: 'white',\n                   textAlign: 'center',\n                   padding: '1px 1px 1px 1px',\n               }\n            },\n            {\n                title: 'Order ID',\n                field: 'orderName',\n                //lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\n            },\n            { title: 'Order Time' ,\n              field: 'orderTime',\n              type: 'datetime',\n              cellStyle: {\n                 padding: '1px 1px 1px 1px',\n              }\n            },\n            { title: 'Remark',\n              field: 'future',\n              cellStyle: {\n                 padding: '1px 1px 1px 1px',\n              }\n            },\n            { title: 'Gross Total',\n              field: 'grossTotal',\n              type: 'currency' ,\n\n            },\n        ],\n        data: [\n\n            { status: 'cooking', future: '2019-07-17 13:30:15' , orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12345', grossTotal: \"323.25\", refID: \"12345\" },\n            { status: 'cooking', future: '2019-07-17 13:30:15' , orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12346', grossTotal: \"500.00\", refID: \"12346\" },\n            { status: 'cooking', future: '2019-07-17 13:30:15' , orderTime: '2019-07-17 13:00:15',storeName: 'Lab Avani', orderName: 'TPC ref 12347', grossTotal: \"33.5\", refID: \"12347\" },\n            /*\n            {\n              name: 'Zerya Betül',\n              surname: 'Baran',\n              birthYear: 2017,\n              birthCity: 34,\n            },\n            */\n        ],\n    });\n\n    //First time loading\n    useEffect(() => {\n        let id = setInterval(function () {\n            freshOrdersInStore();\n        },dataState.interval)\n        setIntervalId(id);\n\n        //Get order in store,\n        //Set to state\n        //freshOrdersInStore();\n\n        return function cleanup() {\n            clearInterval(id);\n        };\n    },[]);\n\n    /*\n    useEffect(() => {\n        function handleStatusChange(status) {\n          setIsOnline(status.isOnline);\n        }\n\n        //[componentWillMount ,componentDidMount ,componentDidUpdate]\n        ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n\n        //[componentWillUnmount()]\n        // Specify how to clean up after this effect:\n        return function cleanup() {\n          ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n        };\n      });\n\n      .MuiTableCell-sizeSmall {\n            padding: 1px 1px 1px 1px;\n        }\n      */\n\n    return (\n        <MaterialTable\n            title=\"Cooking\"\n            columns={state.columns}\n            data={state.data}\n            actionsColumnIndex=\"1\"\n            filtering='true'\n            options={{\n                padding: 'dense',\n                pageSize: 10,\n                search: false,\n                showTitle: false,\n                //rowStyle: { backgroundColor: 'green'},\n                rowStyle: rowData => {\n                    if(rowData.status === \"\") {\n                        return {backgroundColor: 'red'};\n                    }\n\n                    return {};\n                }\n            }}\n\n        />\n    );\n};\n\nexport default Cooking;"]},"metadata":{},"sourceType":"module"}